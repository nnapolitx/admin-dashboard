@font-face {
    font-family: "roboto";
    src: url(font/Roboto-Regular.ttf);
}

@font-face {
  font-family: "roboto-bold";
  src: url(font/Roboto-Bold.ttf);
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}

/* Set body defaults */
body {
  font-family: "roboto", sans-serif;
  font-size: 1rem;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
  height: 48px;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove list and link style */
ul {
    list-style: none;
    padding: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

/*Custom Properties*/
:root {
    --light-back-color: #f8fafc;
    --medium-back-color: #e2e8f0;
    --dark-back-color: #475569;
    --accent-color: #fb7185;
}
/*---Default styles done---*/
/*---Begin custom css---*/

.grid-container {
    display: grid;
    grid-template-columns: 1fr 6fr;
    grid-template-rows: 1fr 7fr;
}

.sidebar {
    background-color: var(--dark-back-color);
    grid-column: 1;
    grid-row: 1/3;
    display: grid;
    grid-template: 1/3;
    align-content: flex-start;
    gap: 50px;
    padding: 1em;
    color: var(--light-back-color);
    z-index: 100;
    box-shadow: 3px 0px 2px var(--dark-back-color);
}


.main-menu ul li{
  display: flex;
  align-items: flex-end;
  gap: 1rem;
  
}

.sidebar li + li {
  margin: 1em 0em;
}

.settings-menu ul li{
  display: flex;
  align-items: flex-end;
  gap: 1rem;
}

.logo {
  font-size: 2rem;
  display: flex;
  align-items: flex-end;
  gap: 1rem;
  font-weight: bolder;
}

.header {
    background-color: var(--light-back-color);
    grid-column: 2;
    grid-row: 1;
    display: grid;
    grid-template-rows: 1fr 1fr;
    padding: 0 1em 1em 1em;
    max-height: 250px;
    z-index: 90;
    box-shadow:0 4px 4px 0 var(--dark-back-color);
}

.top-contain {
  grid-row: 1;
  grid-column: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}

.searchbar {
  display: flex;
  align-items: flex-start;
  gap: 8px;
  flex-grow: 1;
  margin: 0 1em;
}

input {
  border-radius: 15px;
  border: none;
  background-color: var(--medium-back-color);
  flex: 1 1 150px;
  max-width: 600px;
  padding: 2px 12px;
}

.notifications ul {
  display: flex;
  gap: 2em;
  align-items: center;
  margin: 0 1em;
}

.bottom-contain {
  grid-column: 1;
  grid-row: 2;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: 0 1em;
  padding-top: 8px;
}

.hi-there {
  display: flex;
  gap: 1em;
  align-items: center;
  font-size: 1rem;
  font-family: "roboto-bold";
}

.hi-there img {
  height: 84px;
}

.hi-there p {
  font-size: 1.5rem;
  padding-top: 6px;
}

.buttons-container {
  display: flex;
  justify-content: center;
  gap: 1em;
}

button {
  border: none;
  border-radius: 20px;
  padding: 8px 36px;
  font-family: "roboto-bold";
  color: var(--light-back-color);
  background-color: var(--dark-back-color);
}

.main {
  background-color: var(--medium-back-color);
  grid-column: 2;
  grid-row: 2;
  display: grid;
  grid-template-columns: 3fr 1fr;
  gap: 2em;
  padding: 1em 3em;
}

.main p {
  font-family: "roboto-bold";
  margin: 1em 0;
}

.projects {
  grid-column: 1;
  grid-row: 1/3;
}

.card-container {
  display: flex;
  flex-wrap: wrap;
  gap: 2em;
}

.card {
  height: 300px;
  background-color: var(--light-back-color);
  padding: 1em;
  border-radius: 10px;
  flex: 1 1 300px;
  max-width: 500px;
}

.right-bottom {
  grid-column: 2;
}

.announce-container {
  display: flex;
  flex-direction: column;
  gap: 1em;
  background-color: var(--light-back-color);
  border-radius: 10px;
  padding: 1em;
}

.announce-container div+div {
  border-top: 2px solid var(--dark-back-color);
  padding-top: 1em;
}

.trender {
  display: grid;
  grid-template-columns: 1fr 2fr;
}

.trender img {
  grid-column: 1;
}

.words {
  grid-column: 2;
  display: flex;
  flex-direction: column;
}

.trender p {
  font-family: "roboto";
  margin: 0;
  padding: 0;
}

/*---hover, focus effects---*/
button:hover {
  color: var(--dark-back-color);
  background-color: var(--accent-color);
  cursor: pointer;
  box-shadow: 2px 4px 2px 2px;
}

a:hover {
  color: var(--dark-back-color);
  background-color: var(--accent-color);
  cursor: pointer;
  box-shadow: 2px 4px 2px 2px;
}

.notifications a:hover {
  color: var(--accent-color);
  background-color: inherit;
  box-shadow: none;
}

input:focus {
  color: var(--light-back-color);
  background-color: var(--dark-back-color);
  border: none;
  outline: none;
}